-- 1. Retrieve all patients basic details
SELECT PatientID, FirstName, LastName, DateOfBirth, ContactNo1
FROM Patient;

-- 2. List all admitted patients
SELECT p.PatientID, p.FirstName, p.LastName, a.AdmissionDate, a.Status
FROM Patient p
INNER JOIN Admission a ON p.PatientID = a.PatientId;

-- 3. List all doctors by department
SELECT d.FirstName, d.LastName, dp.Name AS Department
FROM Doctor d
INNER JOIN Department dp ON d.DepartmentID = dp.DepartmentID;

-- 4. List all active services and their rates
SELECT Name AS ServiceName, Rate
FROM Service
WHERE Status = 1;

-- 5. Find patients from a specific city (example: Berlin)
SELECT PatientID, FirstName, LastName
FROM Patient
WHERE CityID = (SELECT CityID FROM City WHERE Name = 'Pune');

-- 6. List the total number of patients in each city
SELECT c.Name AS CityName, COUNT(p.PatientID) AS TotalPatients
FROM Patient p
INNER JOIN City c ON p.CityID = c.CityID
GROUP BY c.Name;

-- 7. Retrieve all appointments for a specific doctor
SELECT 
    v.VisitID, 
    p.FirstName AS PatientFirstName, 
    p.LastName AS PatientLastName, 
    v.VisitDate
FROM 
    Visit v
INNER JOIN 
    Patient p ON v.PatientID = p.PatientID
WHERE 
    v.DoctorID = (
        SELECT DoctorID 
        FROM Doctor 
        WHERE FirstName = 'Dr.DFname-1-1' AND LastName = 'DLname-1-1'
    );

-- 8. Find the average age of patients admitted by department
SELECT dp.Name AS DepartmentName, AVG(DATEDIFF(YEAR, p.DateOfBirth, GETDATE())) AS AverageAge
FROM Admission a
INNER JOIN Patient p ON a.PatientID = p.PatientID
INNER JOIN Doctor d ON a.DoctorID = d.DoctorID
INNER JOIN Department dp ON d.DepartmentID = dp.DepartmentID
GROUP BY dp.Name;

-- 9. List all active doctors who have treated more than 10 patients
SELECT d.FirstName, d.LastName, COUNT(v.VisitID) AS TotalVisits
FROM Doctor d
INNER JOIN Visit v ON d.DoctorID = v.DoctorID
GROUP BY d.FirstName, d.LastName
HAVING COUNT(v.VisitID) > 10;

-- 10. Retrieve the total number of times each service was performed within a specific time range
SELECT s.Name AS ServiceName, COUNT(c.ServiceID) AS TotalTimesPerformed
FROM Service s
INNER JOIN Charge c ON s.ServiceID = c.ServiceID
INNER JOIN Visit v ON c.VisitID = v.VisitID
WHERE v.VisitDate BETWEEN '2024-01-01' AND '2024-12-31'
GROUP BY s.Name;

-- 11. Retrieve the highest-charging service and its rate
SELECT TOP 1 Name AS ServiceName, Rate
FROM Service
ORDER BY Rate DESC;

-- 12. Find departments with no assigned doctors
SELECT dp.Name AS DepartmentName
FROM Department dp
LEFT JOIN Doctor d ON dp.DepartmentID = d.DepartmentID
WHERE d.DoctorID IS NULL;

-- 13. Identify patients who have visited the hospital more than once
SELECT p.PatientID, p.FirstName, p.LastName, COUNT(v.VisitID) AS TotalVisits
FROM Patient p
INNER JOIN Visit v ON p.PatientID = v.PatientID
GROUP BY p.PatientID, p.FirstName, p.LastName
HAVING COUNT(v.VisitID) > 1;

-- 14. Find the total revenue generated by service category
SELECT sc.Name AS ServiceCategory, SUM(c.Amount) AS TotalRevenue
FROM Charge c
INNER JOIN Service s ON c.ServiceID = s.ServiceID
INNER JOIN ServiceCategory sc ON s.ServiceCategoryID = sc.ServiceCategoryID
GROUP BY sc.Name
ORDER BY TotalRevenue DESC;

-- 15. List doctors along with their assigned patients in descending order of patient count
SELECT d.FirstName, d.LastName, COUNT(v.PatientID) AS TotalPatients
FROM Doctor d
LEFT JOIN Visit v ON d.DoctorID = v.DoctorID
GROUP BY d.FirstName, d.LastName
ORDER BY TotalPatients DESC;

-- 16. Find the most popular service by service category and the number of times it was used.
SELECT sc.Name AS ServiceCategory, s.Name AS ServiceName, COUNT(c.ServiceID) AS UsageCount
FROM Charge c
INNER JOIN Service s ON c.ServiceID = s.ServiceID
INNER JOIN ServiceCategory sc ON s.ServiceCategoryID = sc.ServiceCategoryID
GROUP BY sc.Name, s.Name
ORDER BY sc.Name, UsageCount DESC;

-- 17. Find the total revenue generated by each doctor
SELECT d.FirstName, d.LastName, SUM(c.Amount) AS TotalRevenue
FROM Doctor d
INNER JOIN Visit v ON d.DoctorID = v.DoctorID
INNER JOIN Charge c ON v.VisitID = c.VisitID
GROUP BY d.FirstName, d.LastName
ORDER BY TotalRevenue DESC;

-- 18. Which are the most frequently used services in each service category, and how many times have they been availed?
SELECT sc.Name AS ServiceCategory, s.Name AS ServiceName, COUNT(c.ChargeID) AS UsageCount
FROM ServiceCategory sc
INNER JOIN Service s ON sc.ServiceCategoryID = s.ServiceCategoryID
INNER JOIN Charge c ON s.ServiceID = c.ServiceID
GROUP BY sc.Name, s.Name
HAVING COUNT(c.ChargeID) = (
    SELECT MAX(UsageCount)
    FROM (
        SELECT COUNT(c1.ChargeID) AS UsageCount
        FROM Service s1
        INNER JOIN Charge c1 ON s1.ServiceID = c1.ServiceID
        WHERE s1.ServiceCategoryID = sc.ServiceCategoryID
        GROUP BY s1.Name
    ) AS CategoryUsage
)
ORDER BY ServiceCategory, UsageCount DESC;


-- 19. List doctors with their average patient age
SELECT d.FirstName, d.LastName, AVG(DATEDIFF(YEAR, p.DateOfBirth, GETDATE())) AS AveragePatientAge
FROM Doctor d
INNER JOIN Visit v ON d.DoctorID = v.DoctorID
INNER JOIN Patient p ON v.PatientID = p.PatientID
GROUP BY d.FirstName, d.LastName;

-- 20. Retrieve the top 5 most visited patients
SELECT TOP 5 p.PatientID, p.FirstName, p.LastName, COUNT(v.VisitID) AS TotalVisits
FROM Patient p
INNER JOIN Visit v ON p.PatientID = v.PatientID
GROUP BY p.PatientID, p.FirstName, p.LastName
ORDER BY TotalVisits DESC;
